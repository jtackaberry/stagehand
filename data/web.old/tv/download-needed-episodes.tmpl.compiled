<script type='text/javascript'>
(function() {
  $('#{{buttonid}}').button({
    icons: {
      primary: 'ui-icon-search'
    }
  });

  $('#{{buttonid}}').click(function() {
    var need_cells, pn;
    $(this).button('disable');
    need_cells = $('img').filter(function() {
      return /^Needed.*/.test(this.alt);
    }).parents('tr').children('td');
    need_cells.animate({
      backgroundColor: '#ffe26f'
    }, 500);
    pn = $.pnotify({
      pnotify_title: 'Episode check'
    }).hide();
    return stagehand.api('/api/shows/check', {
      id: '{{showid}}'
    }).progress(function() {
      return pn.show().pnotify({
        pnotify_text: 'Searching ...',
        pnotify_hide: false,
        pnotify_closer: false,
        pnotify_notice_icon: 'picon picon-throbber'
      });
    }).always((function(_this) {
      return function() {
        $(_this).button('enable');
        pn.pnotify({
          pnotify_hide: true,
          pnotify_closer: true
        });
        return need_cells.stop().css({
          backgroundColor: ''
        });
      };
    })(this)).done(function(_arg) {
      var found, msg, need;
      need = _arg.need, found = _arg.found;
      if (!need) {
        msg = "No episodes of " + ('{{showid}}' ? 'this' : 'any') + " series need downloading.";
      } else {
        msg = "Found " + found + " of " + need + " episodes " + ('{{showid}}' ? 'for this' : 'across all') + " series.";
      }
      return pn.show().pnotify({
        pnotify_text: msg,
        pnotify_delay: 4000,
        pnotify_notice_icon: 'picon picon-complete'
      });
    }).fail(function(_arg) {
      var message;
      message = _arg.message;
      pn.show().pnotify({
        pnotify_text: "Search failed with the error:\n<code>" + message + "</code>",
        pnotify_type: 'error'
      });
      return pn.effect('bounce');
    });
  });

}).call(this);
</script>
